\documentclass{dragonfly-report}
%\documentclass{article}

\usepackage{hyperref}
\usepackage{subfig}

\title{Improving steepness priors in \emph{fishnets}}{Improving
  priors for the steepness of the stock-recruitment function within the R package \emph{fishnets}}

\subtitle{Alternative Ricker formulation}
\author{Philipp Neubauer}

\addbibresource{steepness.bib}

\begin{document}
\maketitle

\section{Inferring steepness: available literature and estimation in the context of fishnets}

This is a companion document outlining a predictive steepness node using Ricker stock-recruit (S-R) function estimates as a basis for the node. For more detail, please refer to the companion document.

\section{An empirical steepness node}

\subsection{Data: a collated dataset for steepness}

Empirical estimates based on maximum lifetime reproductive rates were extracted from \citet{myers_1999_maximum}, and both mean B-H and Ricker steepness were recorded (the latter calculated using formulae in \citet{michielsens_2004_bayesian}), along with other parameters reported in \citet{myers_1999_maximum}. These data were augmented with data from \citet{forrest2010hierarchical} for \emph{Sebastes ssp.} and estimates from S. Harley for tuna. The combined dataset is available in the $\/data\/steepness$ directory as Myers\_et\_al\_steepness\_extended.csv. Data at the family level was also extracted and saved into Myers\_et\_al\_steepness\_families\_extended.csv.

<<setup,echo=FALSE>>=

opts_knit$set(root.dir = '../../')
opts_chunk$set(message = FALSE,warning=FALSE, dev = "pdf") 
options(width=50)
@


A data node for steepness was implemented, such that 
<<steepness data node>>=

# Source in the package ----
              
source('collate.R')
require(dplyr)
require(ggplot2)

steep <- Steepness$create('./data/steepness')
head(tbl_df(steep))

@

returns the data table. The table can then be merged with a fishbase data extract to pair empirical steepness estimates with life-history data. Note that the fishbase data is not restricted to species with $z$ estimates, rather the merge is, in SQL terms, a left join onto the fishbase data:

<<merge data node>>=

# Load the Fishbase data
fb <- FishbaseWeb$read('data/fishbase-web')
# Limit to the 7940 with both k and linf
fb <- subset(fb,!is.na(k) & !is.na(linf))
# An an id column for indexing later
fb$id <- 1:nrow(fb)
# Add a dummy row for helping with predictor nodes
# that need to have at least two predictors
fb$dummy <- 1.0

# merge with steepness data
steep_merged <- Steepness$merge(steep,fb)

head(tbl_df(steep_merged))

@

In order to set up a fishnet that that extracts empirical relationships between steepness and life-history, the merged fishbase/steepness data was aggregated at species level to avoid multiple, possibly contradictory, life-history correlates with steepness. Geometric means were used to aggregate life-history parameters, under the assumption that most follow log-normal distributions.

<<>>=

# geometric mean
gmean <- function(x) exp(mean(log(x),na.rm=T))

# reduce dataset; gometric means for paramters by species
steep_reduced <- steep_merged %>% 
  select(species, 
         genus, 
         family, 
         class, 
         order, 
         mean_R_z, 
         linf, 
         m, 
         fecundity, 
         trophic, 
         lmat, 
         lmax , 
         k, 
         amax, 
         habit, 
         trophic, 
         depthmax) %>% 
  group_by(order,class,genus,family,species) %>% 
  summarise(mean_R_z = unique(mean_R_z),
            habit = unique(habit),
            trophic = gmean(trophic), 
            linf = gmean(linf), 
            m = gmean(m), 
            depthmax = gmean(depthmax),
            fecundity = gmean(fecundity), 
            trophic = gmean(trophic), 
            lmax = gmean(lmax), 
            lmat = gmean(lmat), 
            k = gmean(k), 
            amax = gmean(amax),
            recsigma = NA) %>% 
  ungroup() %>% 
  data.frame()

@


\subsection{The empirical steepness node: fishing for predictive power}

The empirical fishnet node to estimate steepness was embedded in a larger fishnet that aimed to build a covariate set (using the $impute~=~T$ option). All empirical nodes leading up to steepness node itself used the Bayser node, and included taxonomic information as random effects. The actual steepness node was initially specified as a $Brter$ node, in order to capture potentially non-linear relationships between steepness and co-variates. This example uses the Ricker estimates in the dataset, as an alternative to the biased B-H estimates used in the companion document.

<<fitting the steepness node,results='hide'>>=

# build a net for steepnes. 
# Use Bayesian nodes in an attempt to not overfit
# Transformations are defined for Ricker S-R 
# parameters to map steepness onto the real line and back.

R_tr <- function(h) log(h-0.2)
R_tr_inv <- function(ht) exp(ht)+0.2

R_net <- Fishnet(
  species   = SpeciesRandom(),
  genus     = GenusParser(),
  family    = FamilyLookupper(),
  order     = OrderLookupper(),
  class     = ClassLookupper(),
  
  habit     = TaxonomicImputer('habit'),
  depthmax  = TaxonomicImputer('depthmax',c(log,exp),5),
  trophic   = TaxonomicImputer('trophic',c(log,exp),3),
  lmax      = TaxonomicImputer('lmax',c(log,exp),5),
  amax      = TaxonomicImputer('amax',c(log,exp),5),
  
  linf      = Bayser(log(linf) ~ f(family,model="iid") + 
                       f(class,model="iid") + 
                       log(lmax),exp),
  
  fecundity = Bayser(log(fecundity) ~ f(family,model="iid") +
                       f(class,model="iid") + 
                       log(linf) + 
                       log(depthmax),exp),
  
  k         = Bayser(log(k) ~ f(family,model="iid") + 
                       log(linf) + 
                       f(habit,model="iid") + 
                       log(depthmax),exp),
  
  m         = Bayser(log(m) ~ f(family,model="iid") +
                       f(class,model="iid") + 
                       log(k) + 
                       log(linf) + 
                       f(habit,model="iid") + 
                       log(depthmax) + 
                       trophic,exp),
  
  lmat      = Bayser(log(lmat) ~ f(family,model="iid") + 
                       log(k) + 
                       log(linf) + 
                       f(habit,model="iid") + 
                       log(depthmax),exp),
  
  recsigma  = RecsigmaThorsonEtAl2014(),
  
  mean_R_z = Brter(R_tr(mean_R_z) ~  habit + 
                      log(linf) + 
                      log(k) + 
                      log(m) + 
                      log(fecundity) +
                      recsigma + 
                      trophic + 
                      log(depthmax),
                    transform = R_tr_inv,
                    ntrees =3500,
                    bag.fraction=0.9)
  
)

# fit the R_et to the summarised fishbase data
R_net$fit(steep_reduced,impute = T)

@

The predictive power of the steepness node was assessed using jackknifing and a newly implemented tune method for Brter. The tune formulation included 6 formulae with increasing amounts of life-history information.

<<checking>>=

# function to make testset for cross validation
make_testset <- function(net,org_data,name){
  testset <- data.frame(net$data[,-which(colnames(net$data) == name)], 
                        name = org_data[name])
  testset
}

testset <- make_testset(R_net,steep_reduced,'mean_R_z')

# jacknifing - could be done with $cross, 
# but is implemented here to produce 
# a vector of observed and predicted outcomes.

jackknife_cv <- function(data,net,node){
  testnet <- net
  data = data[!is.na(data[[node]]),]
  
  pred <- vector(,nrow(data))
  for (i in 1:nrow(data)){
    cat('CV for observation ',i,'\n')
    train <- data[-i,]
    test <- data[i,]
    test[[node]] <- NA
    testnet$nodes[[node]]$fit(train)
    pred[i] <- testnet$nodes[[node]]$predict(test)
    
  }
  data.frame(Predicted = pred,Observed = data[[node]])
}

covars <- c('log(linf)',
            'log(k)',
            'log(m)',
            'log(fecundity)',
            'log(recsigma)',
            'log(trophic)',
            'log(depthmax)')

formulae <- vector(,6)
formulae[1] <- paste('R_tr(mean_R_z) ~ ',
                     paste(covars[c(3,4)],collapse = ' + '))
formulae[2] <- paste('R_tr(mean_R_z) ~ ',
                     paste(covars[c(3,4,7)],collapse = ' + '))
formulae[3] <- paste('R_tr(mean_R_z) ~ ',
                     paste(covars[c(2,4,7)],collapse = ' + '))
formulae[4] <- paste('R_tr(mean_R_z) ~ ',
                     paste(covars[c(2,3,4,7)],collapse = ' + '))
formulae[5] <- paste('R_tr(mean_R_z) ~ ',
                     paste(covars[c(1,2,3,4,5,7)],collapse = ' + '))
formulae[6] <- paste('R_tr(mean_R_z) ~ ',
                     paste(covars,collapse = ' + '))
@

<<testing_brter,results='hide'>>=
tune <- R_net$nodes$mean_R_z$tune(testset,formulae,
                            folds = sum(!is.na(testset[['mean_R_z']])))
# 
steep_cv <- jackknife_cv(testset,R_net,'mean_R_z')
@

<<output_brter_jk,fig.cap='Observed vs predicted values from jacknife predictions using the Brter formulation of the empirical steepness node and the best model from the tune method. The black line indicates the $y=x$ line of perfect predictions, the red line is the regression fit to the predicted and observed data.',tidy=TRUE>>=
tune$best

lm_pred_steep <- lm(Observed~Predicted,data=steep_cv)
summary(lm_pred_steep)

plot(steep_cv,pch=16)
abline(lm_pred_steep$coeff[1],lm_pred_steep$coeff[2],col=2,lwd=2)
abline(0,1,lwd=2)
@

For the best Brter model, the jackknifing suggests relatively low predictive power (\autoref{fig:output_brter_jk}). The node was re-implemented as a Bayser node, and a tune step was used to define a best model among a set of 8 candidate models, which included taxonomic levels as predictors:

<<Bayser steepness node>>=

R_net_Bayes <- R_net

R_net_Bayes$nodes$mean_R_z  = Bayser(R_tr(mean_R_z) ~ f(family,model='iid') + 
                                   f(habit,model='iid') + 
                                   log(linf) + 
                                   log(k) + 
                                   log(m) + 
                                   log(fecundity) +
                                   log(recsigma) +
                                   log(m)*log(recsigma) + 
                                   log(trophic) + 
                                   log(depthmax),transform = R_tr_inv)

R_net_Bayes$nodes$mean_R_z$fit(testset)

formulae <- vector(,6)
formulae[1] <- paste('R_tr(mean_R_z) ~ ',
                     paste(covars[7],collapse = ' + '))
formulae[2] <- paste('R_tr(mean_R_z) ~ ',
                     "f(family,model='iid')")
formulae[3] <- paste('R_tr(mean_R_z) ~ ',
                     "f(family,model='iid') +",
                     paste(covars[c(3,7)],collapse = ' + '))
formulae[4] <- paste('R_tr(mean_R_z) ~ ',
                     paste(covars[c(2,3,4,7)],collapse = ' + '))
formulae[5] <- paste('R_tr(mean_R_z) ~ ',
                     "f(family,model='iid') +",
                     paste(covars[c(2,3,4,7)],collapse = ' + '))
formulae[6] <- paste('R_tr(mean_R_z) ~ ',
                     "f(family,model='iid') +",
                     "f(habit,model='iid') +",
                     paste(covars[c(2,3,4,7)],collapse = ' + '))
formulae[7] <- paste('R_tr(mean_R_z) ~ ',
                     "f(family,model='iid') +",
                     paste(covars,collapse = ' + '))
formulae[8] <- paste('R_tr(mean_R_z) ~ ',
                     "f(family,model='iid') +",
                     "f(habit,model='iid') +",
                     "log(m)*log(recsigma) +",
                     paste(covars,collapse = ' + '))

@

<<testing,results='hide'>>=
tune <- R_net_Bayes$nodes$mean_R_z$tune(testset,formulae,folds = sum(!is.na(testset[['mean_R_z']])))
# 
steep_cv_bayes <- jackknife_cv(testset,R_net_Bayes,'mean_R_z')
@


<<output_bayser_jk,fig.cap='Observed vs predicted values from jacknife predictions using the Bayser formulation of the empirical steepness node and the best model from the tune method. The black line indicates the $y=x$ line of perfect predictions, the red line is the regression fit to the predicted and observed data.',tidy=TRUE>>=
tune$best

lm_pred_steep <- lm(Observed~Predicted,data=steep_cv_bayes)
summary(lm_pred_steep)

plot(steep_cv_bayes,pch=16)
abline(lm_pred_steep$coeff[1],lm_pred_steep$coeff[2],col=2,lwd=2)
abline(0,1,lwd=2)

@

The Bayesian node does not improve predictions (\autoref{fig:output_bayser_jk}); in fact, the Bayser node seems to work better in this case.Predictive error may be in part due to the somewhat biased estimates of steepness in the input data, with potentially low-quality estimates for various life-history parameters in fishbase further obscuring their relationship with steepness.

\section{Examples}

The examples follow some examples used in the bea2014 node, with additional life history data collected for hoki and snapper from the MPI plenary report 2014.

\subsection{Information gained from life history: Bluenose}

This example shows how the steepness predictive distribution is shrunk when life-history information is added to the predictions (\autoref{fig:bluenose}). The life-history data particularly truncates the upper end of the distribution, suggesting that steepness values above 0.9 are not consistent with life-history.

<<bluenose,fig.cap=c('Steepness samples from the for bluenose \\emph{Hyperoglyphe antarctica}, without any life history information','Steepness samples from the for bluenose \\emph{Hyperoglyphe antarctica}, using life history information'),>>=
bwa <- R_net$sample(list(
  species = 'Hyperoglyphe antarctica',
  # Maximum length, temperature and 
  # maximum depth from Fishbase
  lmax = 140,
  temp = 11,
  depthmax = 1500,
  # Female growth and max age from 
  # Horn et al 2010
  linf = 92.5,
  k = 0.071,
  amax = 71  
),samples = 1000)

# how much information is gained from life-history

bwa.org <- R_net$sample(list(
  species = 'Hyperoglyphe antarctica'),samples = 1000)

ggplot(bwa.org) + 
  geom_bar(aes(x=mean_R_z,y=..density..),fill='grey40') + 
  labs(x='Steepness (z)',y='Density')

ggplot(bwa) + 
  geom_bar(aes(x=mean_R_z,y=..density..),fill='grey40') + 
  labs(x='Steepness (z)',y='Density')

@

\subsection{Comparing against data}

This section compares steepness estimates from various levels of life-history information to available data in fishbase and steepness estimates from Myers et al. 1999. The first two examples are taken from the bea2014 fishnet, the other two examples treat NZ stocks specifically, namely hoki and snapper.

<<preamble,results='hide'>>=

R_net_test <- R_net

#' Plot density histograms
plot_samples <- function(samples,
                         inp_data,
                         species_,pars=c('linf','k','m','mean_R_z')){
  datas = subset(inp_data,species==species_)
  
  melted <- melt(samples[,pars])
  data_melted <- melt(datas[,pars])
  ggplot(melted,aes(x=value)) +
    geom_histogram(aes(y = ..density..),data=data_melted) +
    geom_density(fill=hsv(0,0.7,0.7),alpha=0.5) +
    facet_wrap(~variable,scales='free') + 
    labs(x='',y='Density') + 
    theme(strip.text.x=element_text(size=10))
}

@

\subsubsection{Atlantic Cod}

Steepness estimates for Atlantic Cod are consistently below the value estimated in Myers et al., and does not seem to fluctuate much with increasingly detailed life-history information (\autoref{fig:Cod1},\autoref{fig:Cod2},\autoref{fig:Cod3}).

<<Cod1,fig.cap='Predictions of life-history parameters and steepness for atlantic cod \\emph{Gadus morhua}, without life history data.'>>=

# fit test net
R_net_test$fit(subset(steep_reduced,species!='Gadus morhua'),impute = T)


# predictions

preds.nlh <- R_net_test$sample(list(
  species = 'Gadus morhua'
),samples=1000)

plot_samples(preds.nlh,steep_merged,'Gadus morhua')

@ 

<<Cod2,fig.cap='Predictions of life-history parameters and steepness from life history data for atlantic cod \\emph{Gadus morhua}, using fixed values as inputs.'>>=
preds.slh <- R_net_test$sample(list(
  species = 'Gadus morhua',
  swimmode = 'subcarangiform',
  habit = 'benthopelagic',
  depthmax = 600,
  lmax = 132
),samples = 1000)

plot_samples(preds.slh,steep_merged,
  'Gadus morhua'
)
@

<<Cod3,fig.cap='Predictions of life-history parameters and steepness from life history data for atlantic cod \\emph{Gadus morhua}, using distributions as inputs.'>>=
m.k <- mean(as.numeric(subset(steep_merged,
                              subset = species == 'Gadus morhua',
                              select = 'k')$k))

sd.k <- sqrt(var(as.numeric(subset(steep_merged,
                                   subset = species == 'Gadus morhua',
                                   select = 'k')$k)))

preds.lh <- R_net_test$sample(dists(
  species =  Fixed('Gadus morhua'),
  swimmode = Fixed('subcarangiform'),
  habit = Fixed('benthopelagic'),
  depthmax = Fixed(600),
  lmax = Fixed(132),
  linf = Normal(110,20),
  k = Normal(m.k ,sd.k),
  amax=Fixed(20)
),1000)


plot_samples(preds.lh,steep_merged,'Gadus morhua')
@

\subsubsection{Skipjack tuna}
 
The estimated steepness values are clearly too low given the productivity of skipjack that is assumed in assessments (\autoref{fig:SJ1},\autoref{fig:SJ2},\autoref{fig:SJ3}).

<<SJ1,fig.cap='Predictions of life-history parameters and steepness for skipjack tuna \\emph{Katsuwonus pelamis}, without life history data.'>>=

# predictions
R_net_test$fit(subset(steep_reduced,
                       species!='Katsuwonus pelamis'),
                impute=T)

Kp_pred <- R_net_test$sample(list(
  species = 'Katsuwonus pelamis',
  family = 'Scombridae'
), samples=1000)

plot_samples(Kp_pred,steep_merged,
  'Katsuwonus pelamis'
)

@

<<SJ2,fig.cap='Predictions of life-history parameters and steepness from life history data for skipjack tuna \\emph{Katsuwonus pelamis}, using distributions on limited life history parameters as inputs.'>>=

Kp_pred.slh <- R_net_test$sample(dists(
  species = Fixed('Katsuwonus pelamis'),
  family = Fixed('Scombridae'),
  depthmax = Fixed(260),
  lmax = Fixed(90.5)
),1000)

plot_samples(Kp_pred.slh,steep_merged,
  'Katsuwonus pelamis'
)

@

<<SJ3,fig.cap='Predictions of life-history parameters and steepness from life history data for skipjack tuna \\emph{Katsuwonus pelamis}, using distributions as inputs.'>>=

m.k <- mean(as.numeric(subset(steep_merged,
                              subset = species == 'Katsuwonus pelamis',
                              select = 'k')$k))

sd.k <- sqrt(var(as.numeric(subset(steep_merged,
                                   subset = species == 'Katsuwonus pelamis',
                                   select = 'k')$k)))

Kp_pred.lh <- R_net_test$sample(dists(
  species = Fixed('Katsuwonus pelamis'),
  family = Fixed('Scombridae'),
  depthmax = Fixed(260),
  lmax = Fixed(90.5),
  linf = Normal(80,10),
  k = Normal(m.k ,sd.k)
),1000)

plot_samples(Kp_pred.lh,steep_merged,
  'Katsuwonus pelamis'
)
@

\subsubsection{Snapper}

Life history data were taken from the stock assessment plenary, fishbase as well as individual Snapper assessments. The assumed values of steepness in assessments are 0.85 and 0.9 for SNA1 and SNA7, respectively. Steepness is fixed at 1 for SNA2, which (as shown in Mangel et al. 2013) assumes that recruitment at 20\% of virgin biomass is (with 100\% certainty) equivalent to unfished recruitment.

<<snapper,fig.cap='Predictions of life-history parameters and steepness from life history data for snapper \\emph{Pagrus auratus}, using distributions as inputs.'>>=

R_net_test$fit(subset(steep_reduced,
                       species!='Pagrus auratus'),
                impute = T)

preds.snapper <- R_net_test$sample(dists(
  species = Fixed('Pagrus auratus'),
  family = Fixed('Sparidae'),
  habit = Fixed('benthopelagic'),
  depthmax = Fixed(200),
  m=Fixed(0.075),
  amat = Fixed(4),
  lmat = Fixed(24),
  amax = Fixed(60),
  linf = Normal(65,5),
  k = Normal(0.1,0.05)
),samples = 1000)

plot_samples(  preds.snapper,steep_merged,
               'Pagrus auratus'
)
@


The snapper predictions from the Beverton-Holt steepness node seem to provide sensible estimates (\autoref{fig:snapper}), with a distribution centered around \Sexpr{mean(preds.snapper$mean_R_z)}, which is reasonably close to estimates used in the assessments for SNA1 and SNA7. However, the density near 1 is very low, suggesting that the SNA7 assumption of z=1 is not consistent with life-history traits.

\subsubsection{Hoki}

Hoki life-history parameters were extracted from the 2012 assessment of HOK1. The steepness value in the assessment is 0.75, reduced from 0.9 (used prior to 2008). Estimates from the steepness node suggest that even 0.75 is at the upper limit of what life history correlates would suggest (\autoref{fig:hoki}).

<<hoki,fig.cap='Predictions of life-history parameters and steepness from life history data for hoki \\emph{Macruronus novaezelandiae}, using distributions as inputs.'>>=

R_net_test$fit(subset(steep_reduced,
                       species!='Macruronus novaezelandiae'),
                impute = T)

preds.hoki <- R_net_test$sample(dists(
  species = Fixed('Macruronus novaezelandiae'),
  family = Fixed('Merlucciidae'),
  swimmode = Fixed('subcarangiform'),
  habit = Fixed('benthopelagic'),
  depthmax = Fixed(1000),
  m = Lognormal(log(0.298)-0.5*log((0.153^2)+1),sqrt(log((0.153^2)+1))),
  lmat = Fixed(70),
  amax = Fixed(25),
  linf = Normal(100,10),
  k = Normal(0.2,0.06)
),samples = 1000)

plot_samples(  preds.hoki,steep_merged,
               'Macruronus novaezelandiae'
)
@

\printbibliography

\end{document}